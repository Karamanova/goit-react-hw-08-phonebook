{"version":3,"file":"static/js/318.1989127b.chunk.js","mappings":"gNAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6I,sECDRE,E,QAAYF,GAAAA,EAAH,sF,sECATG,E,QAAQH,GAAAA,MAAH,4O,sECALI,E,QAAYJ,GAAAA,GAAH,+G,oECATK,E,QAAgBL,GAAAA,OAAH,8Z,qECAbM,EAAW,WACtB,IAAMC,GAAcC,EAAAA,EAAAA,MAGpB,MAAO,EAFUC,EAAAA,EAAAA,MAECF,EACnB,C,gNCEYG,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC1B,GAAmBL,EAAAA,EAAAA,KAAZM,GAAP,eAEMC,EAAa,mCAAG,WAAOC,GAAP,8EACdC,EAAO,CACXC,MAAOF,EAAOE,MACdC,SAAUH,EAAOG,UAHC,SAKdL,GAASM,EAAAA,EAAAA,IAAUH,IALL,OAMpBJ,IANoB,2CAAH,sDASnB,OACE,SAAC,KAAD,CACEQ,cAAe,CAAEH,MAAO,GAAIC,SAAU,IACtCG,SAAUP,EACVQ,iBAAkBC,EAAAA,GAHpB,SAKG,SAAAC,GAAK,OACJ,UAAC,IAAD,YACE,SAAC,EAAAC,EAAD,CACEC,KAAK,OACLC,KAAK,QACLC,YAAY,QACZC,SAAUL,EAAMM,aAChBC,MAAOP,EAAMT,OAAOE,SACtB,SAAC,KAAD,CAAcU,KAAK,QAAQK,OAAQ,SAAAC,GAAG,OAAI,SAAC,IAAD,UAAYA,GAAhB,KACtC,SAAC,EAAAR,EAAD,CACEC,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,SAAUL,EAAMM,aAChBC,MAAOP,EAAMT,OAAOG,YACtB,SAAC,KAAD,CAAcS,KAAK,WAAWK,OAAQ,SAAAC,GAAG,OAAI,SAAC,IAAD,UAAYA,GAAhB,KACzC,SAAC,IAAD,CAAeP,KAAK,SAApB,sBAhBE,GAqBX,E,UC7BD,EAfc,WACZ,IAAMQ,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iCACE,SAAC,IAAD,6DACA,SAACxB,EAAD,CAAWC,UAPY,WACzBsB,EAAS,YACV,MAQF,C,sHCfKE,EAAaC,OACjB,0HAGIC,EAAeD,OAAO,SAEfE,EAAgBC,EAAAA,KAAaC,MAAM,CAC9Cd,KAAMa,EAAAA,KAAaE,QAAQN,GAAYO,IAAI,GAAGC,WAC9CC,OAAQL,EAAAA,KAAaE,QAAQJ,GAAcM,aAGhCE,EAAiBN,EAAAA,KAAaC,MAAM,CAC/Cd,KAAMa,EAAAA,KAAaE,QAAQN,GAAYO,IAAI,GAAGC,WAC9C3B,MAAOuB,EAAAA,KAAavB,QAAQ2B,WAC5B1B,SAAUsB,EAAAA,KAAaG,IAAI,GAAGC,aAGnBrB,EAAYiB,EAAAA,KAAaC,MAAM,CAC1CxB,MAAOuB,EAAAA,KAAavB,QAAQ2B,WAC5B1B,SAAUsB,EAAAA,KAAaG,IAAI,GAAGC,Y","sources":["components/auth/common/AuthForm.styled.js","components/common/ErrorText.styled.js","components/common/Input.styled.js","components/common/MainTitle.styled.js","components/common/PrimaryButton.styled.js","hooks/useRedux.js","components/auth/LoginForm/LoginForm.jsx","pages/Login/Login.jsx","scheme/scheme.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form } from \"formik\";\n\nexport const AuthForm = styled(Form)`\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;","import styled from \"styled-components\";\n\nexport const ErrorText = styled.p`\n  margin-bottom: 10px;\n  font-size: 16px;\n  color: #9baacf;\n`;","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 40px;\n  margin: 0 0 10px 0;\n  padding: 8px;\n  font-size: 14px;\n  background-color: #9baacf;\n  outline: none;\n  border: 2px solid #D75C78;\n  border-radius: 5px;\n`;","import styled from \"styled-components\";\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 20px;\n  font-weight: 700;\n  text-align: center;\n  font-size: 20px;\n`;","import styled from \"styled-components\";\n\nexport const PrimaryButton = styled.button`\n  display: block;\n  padding: 5px 20px;\n  border: none;\n  border-radius: 2px;\n  outline: 1px solid #9baacf;\n  background-color: transparent;\n  color: #9baacf;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n  @media screen and (max-width: 425px) {\n    padding: 3px 10px;\n    font-size: 9px;\n  }\n  &:hover {\n    box-shadow: 5px 5px 18px -3px rgba(255,255,255,0.5);\n  }\n`;\n","import { createSelectorHook, useDispatch } from \"react-redux\";\n\nexport const useRedux = () => {\n  const useSelector = createSelectorHook();\n  const dispatch = useDispatch()\n\n  return [dispatch, useSelector];\n};","import { Formik, ErrorMessage } from \"formik\";\nimport { loginUser } from \"redux/authSlice\";\nimport { useRedux } from \"hooks/useRedux\";\nimport { logSchema } from \"scheme/scheme\";\nimport { AuthForm } from \"components/auth/common/AuthForm.styled\";\nimport { PrimaryButton } from \"components/common/PrimaryButton.styled\";\nimport { ErrorText } from \"components/common/ErrorText.styled\";\nimport { Input } from \"components/common/Input.styled\";\n\nexport const LoginForm = ({ onSuccess }) => {\n  const [dispatch] = useRedux();\n\n  const submitHandler = async (values) => {\n    const user = {\n      email: values.email,\n      password: values.password,\n    };\n    await dispatch(loginUser(user));\n    onSuccess();\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      onSubmit={submitHandler}\n      validationSchema={logSchema}\n    >\n      {props => (\n        <AuthForm>\n          <Input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"email\"\n            onChange={props.handleChange}\n            value={props.values.email} />\n          <ErrorMessage name=\"email\" render={msg => <ErrorText>{msg}</ErrorText>} />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            onChange={props.handleChange}\n            value={props.values.password} />\n          <ErrorMessage name=\"password\" render={msg => <ErrorText>{msg}</ErrorText>} />\n          <PrimaryButton type=\"submit\">LOG IN</PrimaryButton>\n        </AuthForm>\n      )}\n    </Formik>\n  );\n};","import { MainTitle } from \"components/common/MainTitle.styled\";\nimport { LoginForm } from \"components/auth/LoginForm/LoginForm\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n  const handleLoginSuccess = () => {\n    navigate(\"/contacts\");\n  };\n\n  return (\n    <>\n      <MainTitle>If you already have an account, please log in</MainTitle>\n      <LoginForm onSuccess={handleLoginSuccess} />\n    </>\n  );\n};\n\nexport default Login;","import * as yup from 'yup';\n\nconst nameRegExp = RegExp(\n  /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/\n);\n\nconst numberRegExp = RegExp(/[0-9]/);\n\nexport const contactSchema = yup.object().shape({\n  name: yup.string().matches(nameRegExp).min(2).required(),\n  number: yup.string().matches(numberRegExp).required(),\n});\n\nexport const registerSchema = yup.object().shape({\n  name: yup.string().matches(nameRegExp).min(2).required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(4).required(),\n});\n\nexport const logSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(4).required(),\n});"],"names":["AuthForm","styled","Form","ErrorText","Input","MainTitle","PrimaryButton","useRedux","useSelector","createSelectorHook","useDispatch","LoginForm","onSuccess","dispatch","submitHandler","values","user","email","password","loginUser","initialValues","onSubmit","validationSchema","logSchema","props","I","type","name","placeholder","onChange","handleChange","value","render","msg","navigate","useNavigate","nameRegExp","RegExp","numberRegExp","contactSchema","yup","shape","matches","min","required","number","registerSchema"],"sourceRoot":""}